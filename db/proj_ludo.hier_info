|top
CLK_50 => CLK_50.IN4
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => SW[6].IN1
SW[7] => SW[7].IN1
SW[8] => SW[8].IN1
SW[9] => SW[9].IN1
KEYS[0] => KEYS[0].IN1
KEYS[1] => KEYS[1].IN1
KEYS[2] => KEYS[2].IN1
KEYS[3] => KEYS[3].IN1
HEX0[0] << byte2ledhex:OUT.HEX0
HEX0[1] << byte2ledhex:OUT.HEX0
HEX0[2] << byte2ledhex:OUT.HEX0
HEX0[3] << byte2ledhex:OUT.HEX0
HEX0[4] << byte2ledhex:OUT.HEX0
HEX0[5] << byte2ledhex:OUT.HEX0
HEX0[6] << byte2ledhex:OUT.HEX0
HEX1[0] << byte2ledhex:OUT.HEX1
HEX1[1] << byte2ledhex:OUT.HEX1
HEX1[2] << byte2ledhex:OUT.HEX1
HEX1[3] << byte2ledhex:OUT.HEX1
HEX1[4] << byte2ledhex:OUT.HEX1
HEX1[5] << byte2ledhex:OUT.HEX1
HEX1[6] << byte2ledhex:OUT.HEX1
HEX2[0] << byte2ledhex:OUT.HEX2
HEX2[1] << byte2ledhex:OUT.HEX2
HEX2[2] << byte2ledhex:OUT.HEX2
HEX2[3] << byte2ledhex:OUT.HEX2
HEX2[4] << byte2ledhex:OUT.HEX2
HEX2[5] << byte2ledhex:OUT.HEX2
HEX2[6] << byte2ledhex:OUT.HEX2
HEX3[0] << byte2ledhex:OUT.HEX3
HEX3[1] << byte2ledhex:OUT.HEX3
HEX3[2] << byte2ledhex:OUT.HEX3
HEX3[3] << byte2ledhex:OUT.HEX3
HEX3[4] << byte2ledhex:OUT.HEX3
HEX3[5] << byte2ledhex:OUT.HEX3
HEX3[6] << byte2ledhex:OUT.HEX3
HEX4[0] << byte2ledhex:OUT.HEX4
HEX4[1] << byte2ledhex:OUT.HEX4
HEX4[2] << byte2ledhex:OUT.HEX4
HEX4[3] << byte2ledhex:OUT.HEX4
HEX4[4] << byte2ledhex:OUT.HEX4
HEX4[5] << byte2ledhex:OUT.HEX4
HEX4[6] << byte2ledhex:OUT.HEX4
HEX5[0] << byte2ledhex:OUT.HEX5
HEX5[1] << byte2ledhex:OUT.HEX5
HEX5[2] << byte2ledhex:OUT.HEX5
HEX5[3] << byte2ledhex:OUT.HEX5
HEX5[4] << byte2ledhex:OUT.HEX5
HEX5[5] << byte2ledhex:OUT.HEX5
HEX5[6] << byte2ledhex:OUT.HEX5
sda <> i2c_master:DUT.sda
scl << i2c_master:DUT.scl
red[0] << vga_driver:TV_OUT.red
red[1] << vga_driver:TV_OUT.red
red[2] << vga_driver:TV_OUT.red
red[3] << vga_driver:TV_OUT.red
red[4] << vga_driver:TV_OUT.red
red[5] << vga_driver:TV_OUT.red
red[6] << vga_driver:TV_OUT.red
red[7] << vga_driver:TV_OUT.red
green[0] << vga_driver:TV_OUT.green
green[1] << vga_driver:TV_OUT.green
green[2] << vga_driver:TV_OUT.green
green[3] << vga_driver:TV_OUT.green
green[4] << vga_driver:TV_OUT.green
green[5] << vga_driver:TV_OUT.green
green[6] << vga_driver:TV_OUT.green
green[7] << vga_driver:TV_OUT.green
blue[0] << vga_driver:TV_OUT.blue
blue[1] << vga_driver:TV_OUT.blue
blue[2] << vga_driver:TV_OUT.blue
blue[3] << vga_driver:TV_OUT.blue
blue[4] << vga_driver:TV_OUT.blue
blue[5] << vga_driver:TV_OUT.blue
blue[6] << vga_driver:TV_OUT.blue
blue[7] << vga_driver:TV_OUT.blue
H_SYNC << vga_driver:TV_OUT.H_sync
V_SYNC << vga_driver:TV_OUT.V_sync
vga_blank << vga_driver:TV_OUT.vga_blank
vga_sync << vga_driver:TV_OUT.vga_sync
vga_clk << vga_driver:TV_OUT.vga_clock
TV_DATA[0] => TV_DATA[0].IN1
TV_DATA[1] => TV_DATA[1].IN1
TV_DATA[2] => TV_DATA[2].IN1
TV_DATA[3] => TV_DATA[3].IN1
TV_DATA[4] => TV_DATA[4].IN1
TV_DATA[5] => TV_DATA[5].IN1
TV_DATA[6] => TV_DATA[6].IN1
TV_DATA[7] => TV_DATA[7].IN1
TD_V_SYNC => ~NO_FANOUT~
TD_H_SYNC => ~NO_FANOUT~
TD_CLK_27 => TD_CLK_27.IN1
TD_RESET_N << reset.DB_MAX_OUTPUT_PORT_TYPE
CLK_100 << sampler:pll_0.outclk_0


|top|bt656_decoder:decoder
TD_CLK_27 => Active_Video.CLK
TD_CLK_27 => count[0].CLK
TD_CLK_27 => count[1].CLK
TD_CLK_27 => count[2].CLK
TD_CLK_27 => count[3].CLK
TD_CLK_27 => count[4].CLK
TD_CLK_27 => count[5].CLK
TD_CLK_27 => count[6].CLK
TD_CLK_27 => count[7].CLK
TD_CLK_27 => count[8].CLK
TD_CLK_27 => count[9].CLK
TD_CLK_27 => count[10].CLK
TD_CLK_27 => count[11].CLK
TD_CLK_27 => count[12].CLK
TD_CLK_27 => count[13].CLK
TD_CLK_27 => count[14].CLK
TD_CLK_27 => count[15].CLK
TD_CLK_27 => count[16].CLK
TD_CLK_27 => count[17].CLK
TD_CLK_27 => count[18].CLK
TD_CLK_27 => count[19].CLK
TD_CLK_27 => count[20].CLK
TD_CLK_27 => count[21].CLK
TD_CLK_27 => count[22].CLK
TD_CLK_27 => count[23].CLK
TD_CLK_27 => count[24].CLK
TD_CLK_27 => count[25].CLK
TD_CLK_27 => count[26].CLK
TD_CLK_27 => count[27].CLK
TD_CLK_27 => count[28].CLK
TD_CLK_27 => count[29].CLK
TD_CLK_27 => count[30].CLK
TD_CLK_27 => count[31].CLK
TD_CLK_27 => Cb[0].CLK
TD_CLK_27 => Cb[1].CLK
TD_CLK_27 => Cb[2].CLK
TD_CLK_27 => Cb[3].CLK
TD_CLK_27 => Cb[4].CLK
TD_CLK_27 => Cb[5].CLK
TD_CLK_27 => Cb[6].CLK
TD_CLK_27 => Cb[7].CLK
TD_CLK_27 => Cr[0].CLK
TD_CLK_27 => Cr[1].CLK
TD_CLK_27 => Cr[2].CLK
TD_CLK_27 => Cr[3].CLK
TD_CLK_27 => Cr[4].CLK
TD_CLK_27 => Cr[5].CLK
TD_CLK_27 => Cr[6].CLK
TD_CLK_27 => Cr[7].CLK
TD_CLK_27 => Data_Valid~reg0.CLK
TD_CLK_27 => YCbCr[0]~reg0.CLK
TD_CLK_27 => YCbCr[1]~reg0.CLK
TD_CLK_27 => YCbCr[2]~reg0.CLK
TD_CLK_27 => YCbCr[3]~reg0.CLK
TD_CLK_27 => YCbCr[4]~reg0.CLK
TD_CLK_27 => YCbCr[5]~reg0.CLK
TD_CLK_27 => YCbCr[6]~reg0.CLK
TD_CLK_27 => YCbCr[7]~reg0.CLK
TD_CLK_27 => YCbCr[8]~reg0.CLK
TD_CLK_27 => YCbCr[9]~reg0.CLK
TD_CLK_27 => YCbCr[10]~reg0.CLK
TD_CLK_27 => YCbCr[11]~reg0.CLK
TD_CLK_27 => YCbCr[12]~reg0.CLK
TD_CLK_27 => YCbCr[13]~reg0.CLK
TD_CLK_27 => YCbCr[14]~reg0.CLK
TD_CLK_27 => YCbCr[15]~reg0.CLK
TD_CLK_27 => Start.CLK
TD_CLK_27 => Pre_Field.CLK
TD_CLK_27 => Field.CLK
TD_CLK_27 => V_blank.CLK
TD_CLK_27 => Window[0].CLK
TD_CLK_27 => Window[1].CLK
TD_CLK_27 => Window[2].CLK
TD_CLK_27 => Window[3].CLK
TD_CLK_27 => Window[4].CLK
TD_CLK_27 => Window[5].CLK
TD_CLK_27 => Window[6].CLK
TD_CLK_27 => Window[7].CLK
TD_CLK_27 => Window[8].CLK
TD_CLK_27 => Window[9].CLK
TD_CLK_27 => Window[10].CLK
TD_CLK_27 => Window[11].CLK
TD_CLK_27 => Window[12].CLK
TD_CLK_27 => Window[13].CLK
TD_CLK_27 => Window[14].CLK
TD_CLK_27 => Window[15].CLK
TD_CLK_27 => Window[16].CLK
TD_CLK_27 => Window[17].CLK
TD_CLK_27 => Window[18].CLK
TD_CLK_27 => Window[19].CLK
TD_CLK_27 => Window[20].CLK
TD_CLK_27 => Window[21].CLK
TD_CLK_27 => Window[22].CLK
TD_CLK_27 => Window[23].CLK
data[0] => Window[0].DATAIN
data[0] => YCbCr[8]~reg0.DATAIN
data[0] => Cr[0].DATAIN
data[0] => Cb[0].DATAIN
data[1] => Window[1].DATAIN
data[1] => YCbCr[9]~reg0.DATAIN
data[1] => Cr[1].DATAIN
data[1] => Cb[1].DATAIN
data[2] => Window[2].DATAIN
data[2] => YCbCr[10]~reg0.DATAIN
data[2] => Cr[2].DATAIN
data[2] => Cb[2].DATAIN
data[3] => Window[3].DATAIN
data[3] => YCbCr[11]~reg0.DATAIN
data[3] => Cr[3].DATAIN
data[3] => Cb[3].DATAIN
data[4] => Window[4].DATAIN
data[4] => SAV.IN1
data[4] => YCbCr[12]~reg0.DATAIN
data[4] => Cr[4].DATAIN
data[4] => Cb[4].DATAIN
data[5] => Window[5].DATAIN
data[5] => V_blank.DATAIN
data[5] => YCbCr[13]~reg0.DATAIN
data[5] => Cr[5].DATAIN
data[5] => Cb[5].DATAIN
data[6] => Window[6].DATAIN
data[6] => Field.DATAIN
data[6] => YCbCr[14]~reg0.DATAIN
data[6] => Cr[6].DATAIN
data[6] => Cb[6].DATAIN
data[7] => Window[7].DATAIN
data[7] => YCbCr[15]~reg0.DATAIN
data[7] => Cr[7].DATAIN
data[7] => Cb[7].DATAIN
YCbCr[0] <= YCbCr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[1] <= YCbCr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[2] <= YCbCr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[3] <= YCbCr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[4] <= YCbCr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[5] <= YCbCr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[6] <= YCbCr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[7] <= YCbCr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[8] <= YCbCr[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[9] <= YCbCr[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[10] <= YCbCr[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[11] <= YCbCr[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[12] <= YCbCr[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[13] <= YCbCr[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[14] <= YCbCr[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
YCbCr[15] <= YCbCr[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => count[1].OUTPUTSELECT
reset => count[2].OUTPUTSELECT
reset => count[3].OUTPUTSELECT
reset => count[4].OUTPUTSELECT
reset => count[5].OUTPUTSELECT
reset => count[6].OUTPUTSELECT
reset => count[7].OUTPUTSELECT
reset => count[8].OUTPUTSELECT
reset => count[9].OUTPUTSELECT
reset => count[10].OUTPUTSELECT
reset => count[11].OUTPUTSELECT
reset => count[12].OUTPUTSELECT
reset => count[13].OUTPUTSELECT
reset => count[14].OUTPUTSELECT
reset => count[15].OUTPUTSELECT
reset => count[16].OUTPUTSELECT
reset => Cb[0].ACLR
reset => Cb[1].ACLR
reset => Cb[2].ACLR
reset => Cb[3].ACLR
reset => Cb[4].ACLR
reset => Cb[5].ACLR
reset => Cb[6].ACLR
reset => Cb[7].ACLR
reset => Cr[0].ACLR
reset => Cr[1].ACLR
reset => Cr[2].ACLR
reset => Cr[3].ACLR
reset => Cr[4].ACLR
reset => Cr[5].ACLR
reset => Cr[6].ACLR
reset => Cr[7].ACLR
reset => Data_Valid~reg0.ACLR
reset => YCbCr[0]~reg0.ACLR
reset => YCbCr[1]~reg0.ACLR
reset => YCbCr[2]~reg0.ACLR
reset => YCbCr[3]~reg0.ACLR
reset => YCbCr[4]~reg0.ACLR
reset => YCbCr[5]~reg0.ACLR
reset => YCbCr[6]~reg0.ACLR
reset => YCbCr[7]~reg0.ACLR
reset => YCbCr[8]~reg0.ACLR
reset => YCbCr[9]~reg0.ACLR
reset => YCbCr[10]~reg0.ACLR
reset => YCbCr[11]~reg0.ACLR
reset => YCbCr[12]~reg0.ACLR
reset => YCbCr[13]~reg0.ACLR
reset => YCbCr[14]~reg0.ACLR
reset => YCbCr[15]~reg0.ACLR
reset => Start.ACLR
reset => Pre_Field.ACLR
reset => Field.ACLR
reset => V_blank.ACLR
reset => Window[0].ACLR
reset => Window[1].ACLR
reset => Window[2].ACLR
reset => Window[3].ACLR
reset => Window[4].ACLR
reset => Window[5].ACLR
reset => Window[6].ACLR
reset => Window[7].ACLR
reset => Window[8].ACLR
reset => Window[9].ACLR
reset => Window[10].ACLR
reset => Window[11].ACLR
reset => Window[12].ACLR
reset => Window[13].ACLR
reset => Window[14].ACLR
reset => Window[15].ACLR
reset => Window[16].ACLR
reset => Window[17].ACLR
reset => Window[18].ACLR
reset => Window[19].ACLR
reset => Window[20].ACLR
reset => Window[21].ACLR
reset => Window[22].ACLR
reset => Window[23].ACLR
reset => count[31].ENA
reset => count[30].ENA
reset => count[29].ENA
reset => count[28].ENA
reset => count[27].ENA
reset => count[26].ENA
reset => count[25].ENA
reset => count[24].ENA
reset => count[23].ENA
reset => count[22].ENA
reset => count[21].ENA
reset => count[20].ENA
reset => count[19].ENA
reset => count[18].ENA
reset => count[17].ENA
reset => count[0].ENA
reset => Active_Video.ENA
field <= <GND>
active_video <= <GND>
Data_Valid <= Data_Valid~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|bt656_decoder:decoder|divide_by_9:div9
num[0] => Mult0.IN25
num[1] => Mult0.IN24
num[2] => Mult0.IN23
num[3] => Mult0.IN22
num[4] => Mult0.IN21
num[5] => Mult0.IN20
num[6] => Mult0.IN19
num[7] => Mult0.IN18
num[8] => Mult0.IN17
num[9] => Mult0.IN16
num[10] => Mult0.IN15
num[11] => Mult0.IN14
num[12] => Mult0.IN13
lsb <= Mult0.DB_MAX_OUTPUT_PORT_TYPE


|top|sampler:pll_0
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= sampler_0002:sampler_inst.outclk_0
locked <= sampler_0002:sampler_inst.locked


|top|sampler:pll_0|sampler_0002:sampler_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|top|sampler:pll_0|sampler_0002:sampler_inst|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
zdbfbclk <> <GND>


|top|clock_divider:i2c_clock
reset => clk_o.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
ref_clk => count[0].CLK
ref_clk => count[1].CLK
ref_clk => count[2].CLK
ref_clk => count[3].CLK
ref_clk => count[4].CLK
ref_clk => count[5].CLK
ref_clk => count[6].CLK
ref_clk => count[7].CLK
ref_clk => count[8].CLK
ref_clk => count[9].CLK
ref_clk => clk_o~reg0.CLK
clk_o <= clk_o~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|clock_divider:clk25
reset => clk_o.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
ref_clk => count[0].CLK
ref_clk => count[1].CLK
ref_clk => count[2].CLK
ref_clk => count[3].CLK
ref_clk => count[4].CLK
ref_clk => count[5].CLK
ref_clk => count[6].CLK
ref_clk => count[7].CLK
ref_clk => count[8].CLK
ref_clk => count[9].CLK
ref_clk => clk_o~reg0.CLK
clk_o <= clk_o~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|i2cinput:IN
SW[0] => read.DATAIN
SW[1] => reg_dest.DATAB
SW[1] => data_to_send.DATAB
SW[2] => reg_dest.DATAB
SW[2] => data_to_send.DATAB
SW[3] => reg_dest.DATAB
SW[3] => data_to_send.DATAB
SW[4] => reg_dest.DATAB
SW[4] => data_to_send.DATAB
SW[5] => reg_dest.DATAB
SW[5] => data_to_send.DATAB
SW[6] => reg_dest.DATAB
SW[6] => data_to_send.DATAB
SW[7] => reg_dest.DATAB
SW[7] => data_to_send.DATAB
SW[8] => reg_dest.DATAB
SW[8] => data_to_send.DATAB
SW[9] => ~NO_FANOUT~
KEYS[0] => reset.DATAIN
KEYS[0] => data_to_send.OUTPUTSELECT
KEYS[0] => data_to_send.OUTPUTSELECT
KEYS[0] => data_to_send.OUTPUTSELECT
KEYS[0] => data_to_send.OUTPUTSELECT
KEYS[0] => data_to_send.OUTPUTSELECT
KEYS[0] => data_to_send.OUTPUTSELECT
KEYS[0] => data_to_send.OUTPUTSELECT
KEYS[0] => data_to_send.OUTPUTSELECT
KEYS[0] => reg_dest.OUTPUTSELECT
KEYS[0] => reg_dest.OUTPUTSELECT
KEYS[0] => reg_dest.OUTPUTSELECT
KEYS[0] => reg_dest.OUTPUTSELECT
KEYS[0] => reg_dest.OUTPUTSELECT
KEYS[0] => reg_dest.OUTPUTSELECT
KEYS[0] => reg_dest.OUTPUTSELECT
KEYS[0] => reg_dest.OUTPUTSELECT
KEYS[1] => start.DATAIN
KEYS[2] => data_to_send.OUTPUTSELECT
KEYS[2] => data_to_send.OUTPUTSELECT
KEYS[2] => data_to_send.OUTPUTSELECT
KEYS[2] => data_to_send.OUTPUTSELECT
KEYS[2] => data_to_send.OUTPUTSELECT
KEYS[2] => data_to_send.OUTPUTSELECT
KEYS[2] => data_to_send.OUTPUTSELECT
KEYS[2] => data_to_send.OUTPUTSELECT
KEYS[2] => reg_dest.OUTPUTSELECT
KEYS[2] => reg_dest.OUTPUTSELECT
KEYS[2] => reg_dest.OUTPUTSELECT
KEYS[2] => reg_dest.OUTPUTSELECT
KEYS[2] => reg_dest.OUTPUTSELECT
KEYS[2] => reg_dest.OUTPUTSELECT
KEYS[2] => reg_dest.OUTPUTSELECT
KEYS[2] => reg_dest.OUTPUTSELECT
KEYS[3] => reg_dest.OUTPUTSELECT
KEYS[3] => reg_dest.OUTPUTSELECT
KEYS[3] => reg_dest.OUTPUTSELECT
KEYS[3] => reg_dest.OUTPUTSELECT
KEYS[3] => reg_dest.OUTPUTSELECT
KEYS[3] => reg_dest.OUTPUTSELECT
KEYS[3] => reg_dest.OUTPUTSELECT
KEYS[3] => reg_dest.OUTPUTSELECT
reset <= KEYS[0].DB_MAX_OUTPUT_PORT_TYPE
read <= SW[0].DB_MAX_OUTPUT_PORT_TYPE
start <= KEYS[1].DB_MAX_OUTPUT_PORT_TYPE
clk => reg_dest[0]~reg0.CLK
clk => reg_dest[1]~reg0.CLK
clk => reg_dest[2]~reg0.CLK
clk => reg_dest[3]~reg0.CLK
clk => reg_dest[4]~reg0.CLK
clk => reg_dest[5]~reg0.CLK
clk => reg_dest[6]~reg0.CLK
clk => reg_dest[7]~reg0.CLK
clk => data_to_send[0]~reg0.CLK
clk => data_to_send[1]~reg0.CLK
clk => data_to_send[2]~reg0.CLK
clk => data_to_send[3]~reg0.CLK
clk => data_to_send[4]~reg0.CLK
clk => data_to_send[5]~reg0.CLK
clk => data_to_send[6]~reg0.CLK
clk => data_to_send[7]~reg0.CLK
data_to_send[0] <= data_to_send[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_send[1] <= data_to_send[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_send[2] <= data_to_send[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_send[3] <= data_to_send[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_send[4] <= data_to_send[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_send[5] <= data_to_send[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_send[6] <= data_to_send[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_send[7] <= data_to_send[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[0] <= reg_dest[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[1] <= reg_dest[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[2] <= reg_dest[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[3] <= reg_dest[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[4] <= reg_dest[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[5] <= reg_dest[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[6] <= reg_dest[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[7] <= reg_dest[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|i2c_master:DUT
clk => data_to_read[0]~reg0.CLK
clk => data_to_read[1]~reg0.CLK
clk => data_to_read[2]~reg0.CLK
clk => data_to_read[3]~reg0.CLK
clk => data_to_read[4]~reg0.CLK
clk => data_to_read[5]~reg0.CLK
clk => data_to_read[6]~reg0.CLK
clk => data_to_read[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => current_state~1.DATAIN
clk => scl.DATAB
clk => scl_en.CLK
reset => scl_en.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
read => always3.IN1
read => always3.IN1
read => always3.IN1
read => always3.IN1
data_to_send[0] => Mux1.IN7
data_to_send[1] => Mux1.IN6
data_to_send[2] => Mux1.IN5
data_to_send[3] => Mux1.IN4
data_to_send[4] => Mux1.IN3
data_to_send[5] => Mux1.IN2
data_to_send[6] => Mux1.IN1
data_to_send[7] => Mux1.IN0
data_to_read[0] <= data_to_read[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_read[1] <= data_to_read[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_read[2] <= data_to_read[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_read[3] <= data_to_read[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_read[4] <= data_to_read[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_read[5] <= data_to_read[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_read[6] <= data_to_read[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_to_read[7] <= data_to_read[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_dest[0] => Mux2.IN7
reg_dest[1] => Mux2.IN6
reg_dest[2] => Mux2.IN5
reg_dest[3] => Mux2.IN4
reg_dest[4] => Mux2.IN3
reg_dest[5] => Mux2.IN2
reg_dest[6] => Mux2.IN1
reg_dest[7] => Mux2.IN0
sda <> sda
scl <= scl.DB_MAX_OUTPUT_PORT_TYPE
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT


|top|byte2ledhex:OUT
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
data[12] => data[12].IN1
data[13] => data[13].IN1
data[14] => data[14].IN1
data[15] => data[15].IN1
data[16] => data[16].IN1
data[17] => data[17].IN1
data[18] => data[18].IN1
data[19] => data[19].IN1
data[20] => data[20].IN1
data[21] => data[21].IN1
data[22] => data[22].IN1
data[23] => data[23].IN1
HEX0[0] <= nibble2hex:firstNibble.HEX
HEX0[1] <= nibble2hex:firstNibble.HEX
HEX0[2] <= nibble2hex:firstNibble.HEX
HEX0[3] <= nibble2hex:firstNibble.HEX
HEX0[4] <= nibble2hex:firstNibble.HEX
HEX0[5] <= nibble2hex:firstNibble.HEX
HEX0[6] <= nibble2hex:firstNibble.HEX
HEX1[0] <= nibble2hex:secondNibble.HEX
HEX1[1] <= nibble2hex:secondNibble.HEX
HEX1[2] <= nibble2hex:secondNibble.HEX
HEX1[3] <= nibble2hex:secondNibble.HEX
HEX1[4] <= nibble2hex:secondNibble.HEX
HEX1[5] <= nibble2hex:secondNibble.HEX
HEX1[6] <= nibble2hex:secondNibble.HEX
HEX2[0] <= nibble2hex:thirdNibble.HEX
HEX2[1] <= nibble2hex:thirdNibble.HEX
HEX2[2] <= nibble2hex:thirdNibble.HEX
HEX2[3] <= nibble2hex:thirdNibble.HEX
HEX2[4] <= nibble2hex:thirdNibble.HEX
HEX2[5] <= nibble2hex:thirdNibble.HEX
HEX2[6] <= nibble2hex:thirdNibble.HEX
HEX3[0] <= nibble2hex:fourthNibble.HEX
HEX3[1] <= nibble2hex:fourthNibble.HEX
HEX3[2] <= nibble2hex:fourthNibble.HEX
HEX3[3] <= nibble2hex:fourthNibble.HEX
HEX3[4] <= nibble2hex:fourthNibble.HEX
HEX3[5] <= nibble2hex:fourthNibble.HEX
HEX3[6] <= nibble2hex:fourthNibble.HEX
HEX4[0] <= nibble2hex:fifthNibble.HEX
HEX4[1] <= nibble2hex:fifthNibble.HEX
HEX4[2] <= nibble2hex:fifthNibble.HEX
HEX4[3] <= nibble2hex:fifthNibble.HEX
HEX4[4] <= nibble2hex:fifthNibble.HEX
HEX4[5] <= nibble2hex:fifthNibble.HEX
HEX4[6] <= nibble2hex:fifthNibble.HEX
HEX5[0] <= nibble2hex:sixthNibble.HEX
HEX5[1] <= nibble2hex:sixthNibble.HEX
HEX5[2] <= nibble2hex:sixthNibble.HEX
HEX5[3] <= nibble2hex:sixthNibble.HEX
HEX5[4] <= nibble2hex:sixthNibble.HEX
HEX5[5] <= nibble2hex:sixthNibble.HEX
HEX5[6] <= nibble2hex:sixthNibble.HEX


|top|byte2ledhex:OUT|nibble2hex:firstNibble
nibble[0] => Decoder0.IN3
nibble[1] => Decoder0.IN2
nibble[2] => Decoder0.IN1
nibble[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|byte2ledhex:OUT|nibble2hex:secondNibble
nibble[0] => Decoder0.IN3
nibble[1] => Decoder0.IN2
nibble[2] => Decoder0.IN1
nibble[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|byte2ledhex:OUT|nibble2hex:thirdNibble
nibble[0] => Decoder0.IN3
nibble[1] => Decoder0.IN2
nibble[2] => Decoder0.IN1
nibble[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|byte2ledhex:OUT|nibble2hex:fourthNibble
nibble[0] => Decoder0.IN3
nibble[1] => Decoder0.IN2
nibble[2] => Decoder0.IN1
nibble[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|byte2ledhex:OUT|nibble2hex:fifthNibble
nibble[0] => Decoder0.IN3
nibble[1] => Decoder0.IN2
nibble[2] => Decoder0.IN1
nibble[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|byte2ledhex:OUT|nibble2hex:sixthNibble
nibble[0] => Decoder0.IN3
nibble[1] => Decoder0.IN2
nibble[2] => Decoder0.IN1
nibble[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|vga_driver:TV_OUT
r[0] => red[0].DATAIN
r[1] => red[1].DATAIN
r[2] => red[2].DATAIN
r[3] => red[3].DATAIN
r[4] => red[4].DATAIN
r[5] => red[5].DATAIN
r[6] => red[6].DATAIN
r[7] => red[7].DATAIN
g[0] => green[0].DATAIN
g[1] => green[1].DATAIN
g[2] => green[2].DATAIN
g[3] => green[3].DATAIN
g[4] => green[4].DATAIN
g[5] => green[5].DATAIN
g[6] => green[6].DATAIN
g[7] => green[7].DATAIN
b[0] => blue[0].DATAIN
b[1] => blue[1].DATAIN
b[2] => blue[2].DATAIN
b[3] => blue[3].DATAIN
b[4] => blue[4].DATAIN
b[5] => blue[5].DATAIN
b[6] => blue[6].DATAIN
b[7] => blue[7].DATAIN
reset_n => H_sync~reg0.PRESET
reset_n => H_counter[0].ACLR
reset_n => H_counter[1].ACLR
reset_n => H_counter[2].ACLR
reset_n => H_counter[3].ACLR
reset_n => H_counter[4].ACLR
reset_n => H_counter[5].ACLR
reset_n => H_counter[6].ACLR
reset_n => H_counter[7].ACLR
reset_n => H_counter[8].ACLR
reset_n => H_counter[9].ACLR
reset_n => H_counter[10].ACLR
reset_n => V_sync~reg0.PRESET
reset_n => V_counter[0].ACLR
reset_n => V_counter[1].ACLR
reset_n => V_counter[2].ACLR
reset_n => V_counter[3].ACLR
reset_n => V_counter[4].ACLR
reset_n => V_counter[5].ACLR
reset_n => V_counter[6].ACLR
reset_n => V_counter[7].ACLR
reset_n => V_counter[8].ACLR
reset_n => V_counter[9].ACLR
reset_n => V_counter[10].ACLR
clk => V_sync~reg0.CLK
clk => V_counter[0].CLK
clk => V_counter[1].CLK
clk => V_counter[2].CLK
clk => V_counter[3].CLK
clk => V_counter[4].CLK
clk => V_counter[5].CLK
clk => V_counter[6].CLK
clk => V_counter[7].CLK
clk => V_counter[8].CLK
clk => V_counter[9].CLK
clk => V_counter[10].CLK
clk => H_sync~reg0.CLK
clk => H_counter[0].CLK
clk => H_counter[1].CLK
clk => H_counter[2].CLK
clk => H_counter[3].CLK
clk => H_counter[4].CLK
clk => H_counter[5].CLK
clk => H_counter[6].CLK
clk => H_counter[7].CLK
clk => H_counter[8].CLK
clk => H_counter[9].CLK
clk => H_counter[10].CLK
clk => vga_clock.DATAIN
red[0] <= r[0].DB_MAX_OUTPUT_PORT_TYPE
red[1] <= r[1].DB_MAX_OUTPUT_PORT_TYPE
red[2] <= r[2].DB_MAX_OUTPUT_PORT_TYPE
red[3] <= r[3].DB_MAX_OUTPUT_PORT_TYPE
red[4] <= r[4].DB_MAX_OUTPUT_PORT_TYPE
red[5] <= r[5].DB_MAX_OUTPUT_PORT_TYPE
red[6] <= r[6].DB_MAX_OUTPUT_PORT_TYPE
red[7] <= r[7].DB_MAX_OUTPUT_PORT_TYPE
green[0] <= g[0].DB_MAX_OUTPUT_PORT_TYPE
green[1] <= g[1].DB_MAX_OUTPUT_PORT_TYPE
green[2] <= g[2].DB_MAX_OUTPUT_PORT_TYPE
green[3] <= g[3].DB_MAX_OUTPUT_PORT_TYPE
green[4] <= g[4].DB_MAX_OUTPUT_PORT_TYPE
green[5] <= g[5].DB_MAX_OUTPUT_PORT_TYPE
green[6] <= g[6].DB_MAX_OUTPUT_PORT_TYPE
green[7] <= g[7].DB_MAX_OUTPUT_PORT_TYPE
blue[0] <= b[0].DB_MAX_OUTPUT_PORT_TYPE
blue[1] <= b[1].DB_MAX_OUTPUT_PORT_TYPE
blue[2] <= b[2].DB_MAX_OUTPUT_PORT_TYPE
blue[3] <= b[3].DB_MAX_OUTPUT_PORT_TYPE
blue[4] <= b[4].DB_MAX_OUTPUT_PORT_TYPE
blue[5] <= b[5].DB_MAX_OUTPUT_PORT_TYPE
blue[6] <= b[6].DB_MAX_OUTPUT_PORT_TYPE
blue[7] <= b[7].DB_MAX_OUTPUT_PORT_TYPE
H_sync <= H_sync~reg0.DB_MAX_OUTPUT_PORT_TYPE
V_sync <= V_sync~reg0.DB_MAX_OUTPUT_PORT_TYPE
vga_blank <= vga_blank.DB_MAX_OUTPUT_PORT_TYPE
vga_sync <= <VCC>
vga_clock <= clk.DB_MAX_OUTPUT_PORT_TYPE


